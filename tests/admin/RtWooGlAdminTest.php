<?php

/**
 * This class can be used in Automated Testing via PHPUnit.
 *
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-10 at 16:04:50.
 */
class RtWooGlAdminTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var RtWooGlAdmin
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new RtWooGlAdmin;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * Generated from @assert ( 'http://gitlab.example.com/api/v3/', 'Gitlab Private Token' ) == array( 'result' => 'success', 'message' => 'Connection Successful.' ).
	 *
	 * @covers RtWooGlAdmin::test_connection
	 */
	public function testTest_connection() {
		$this->assertEquals(
				array('result' => 'success', 'message' => 'Connection Successful.'), $this->object->test_connection('http://gitlab.example.com/api/v3/', 'Gitlab Private Token')
		);
	}

	/**
	 * Generated from @assert ( '', '' ) == array( 'result' => 'error', 'message' => 'Connection Failed. API Endpoint/Token is missing.' ).
	 *
	 * @covers RtWooGlAdmin::test_connection
	 */
	public function testTest_connection2() {
		$this->assertEquals(
				array('result' => 'error', 'message' => 'Connection Failed. API Endpoint/Token is missing.'), $this->object->test_connection('', '')
		);
	}

	/**
	 * Generated from @assert ( 'fggrg', 'Gitlab Private Token' ) == array( 'result' => 'error', 'message' => 'Connection Failed. API Endpoint URL is invalid.' ).
	 *
	 * @covers RtWooGlAdmin::test_connection
	 */
	public function testTest_connection3() {
		$this->assertEquals(
				array('result' => 'error', 'message' => 'Connection Failed. API Endpoint URL is invalid.'), $this->object->test_connection('fggrg', 'Gitlab Private Token')
		);
	}

	/**
	 * Generated from @assert ( 'http://gitlab.example.com/api/v3/', 'avdgvdsg' ) == array( 'result' => 'error', 'message' => 'Connection Failed. Invalid API Endpoint/Token. Please verify.' ).
	 *
	 * @covers RtWooGlAdmin::test_connection
	 */
	public function testTest_connection4() {
		$this->assertEquals(
				array('result' => 'error', 'message' => 'Connection Failed. Invalid API Endpoint/Token. Please verify.'), $this->object->test_connection('http://gitlab.example.com/api/v3/', 'avdgvdsg')
		);
	}

	/**
	 * Generated from @assert ( 'http://google.com', 'Gitlab Private Token' ) == array( 'result' => 'error', 'message' => 'Connection Failed. Invalid API Endpoint/Token. Please verify.' ).
	 *
	 * @covers RtWooGlAdmin::test_connection
	 */
	public function testTest_connection5() {
		$this->assertEquals(
				array('result' => 'error', 'message' => 'Connection Failed. Invalid API Endpoint/Token. Please verify.'), $this->object->test_connection('http://google.com', 'Gitlab Private Token')
		);
	}

	/**
	 * @covers RtWooGlAdmin::load_scripts
	 * @todo   Implement testLoad_scripts().
	 */
	public function testLoad_scripts() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::init_gitlab_client
	 * @todo   Implement testInit_gitlab_client().
	 */
	public function testInit_gitlab_client() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::test_connection_wrapper
	 * @todo   Implement testTest_connection_wrapper().
	 */
	public function testTest_connection_wrapper() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::validate_api
	 * @todo   Implement testValidate_api().
	 */
	public function testValidate_api() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::settings
	 * @todo   Implement testSettings().
	 */
	public function testSettings() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::add_product_metabox
	 * @todo   Implement testAdd_product_metabox().
	 */
	public function testAdd_product_metabox() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::add_gitlab_project_meta
	 * @todo   Implement testAdd_gitlab_project_meta().
	 */
	public function testAdd_gitlab_project_meta() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::form_gitlab_project_meta
	 * @todo   Implement testForm_gitlab_project_meta().
	 */
	public function testForm_gitlab_project_meta() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers RtWooGlAdmin::save_gitlab_project_meta
	 * @todo   Implement testSave_gitlab_project_meta().
	 */
	public function testSave_gitlab_project_meta() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}
